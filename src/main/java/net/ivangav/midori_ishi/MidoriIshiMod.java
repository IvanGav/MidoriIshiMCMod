package net.ivangav.midori_ishi;

import net.ivangav.midori_ishi.block.ModBlocks;
import net.ivangav.midori_ishi.block.entity.ModBlockEntities;
import net.ivangav.midori_ishi.effect.ModEffects;
import net.ivangav.midori_ishi.tabs.ModCreativeModTabs;
import net.ivangav.midori_ishi.item.ModItems;
import net.ivangav.midori_ishi.screen.MidoriInfusionTableScreen;
import net.ivangav.midori_ishi.screen.MidoriTransmogrificationTableScreen;
import net.ivangav.midori_ishi.screen.ModMenuTypes;
import net.ivangav.midori_ishi.sound.ModSound;
import com.mojang.logging.LogUtils;
import net.minecraft.client.gui.screens.MenuScreens;
import net.minecraftforge.api.distmarker.Dist;
import net.minecraftforge.common.MinecraftForge;
import net.minecraftforge.event.BuildCreativeModeTabContentsEvent;
import net.minecraftforge.event.server.ServerStartingEvent;
import net.minecraftforge.eventbus.api.IEventBus;
import net.minecraftforge.eventbus.api.SubscribeEvent;
import net.minecraftforge.fml.common.Mod;
import net.minecraftforge.fml.config.ModConfig;
import net.minecraftforge.fml.event.lifecycle.FMLClientSetupEvent;
import net.minecraftforge.fml.event.lifecycle.FMLCommonSetupEvent;
import net.minecraftforge.fml.javafmlmod.FMLJavaModLoadingContext;
import org.slf4j.Logger;

// The value here should match an entry in the META-INF/mods.toml file
@Mod(MidoriIshiMod.MOD_ID)
public class MidoriIshiMod {
    // Define mod id in a common place for everything to reference
    public static final String MOD_ID = "midori_ishi";
    // Directly reference a slf4j logger
    private static final Logger LOGGER = LogUtils.getLogger();

    public MidoriIshiMod(FMLJavaModLoadingContext context) {
        IEventBus modEventBus = context.getModEventBus();

        ModItems.register(modEventBus);
        ModCreativeModTabs.register(modEventBus);
        ModBlocks.register(modEventBus);
        ModSound.register(modEventBus);
        ModEffects.register(modEventBus);
        ModBlockEntities.register(modEventBus);
        ModMenuTypes.register(modEventBus);

        // Register the commonSetup method for modloading
//        modEventBus.addListener(this::commonSetup);
        // Register ourselves for server and other game events we are interested in
        MinecraftForge.EVENT_BUS.register(this);
        // Register the item to a creative tab
//        modEventBus.addListener(this::addCreative);
        // Register our mod's ForgeConfigSpec so that Forge can create and load the config file for us
        context.registerConfig(ModConfig.Type.COMMON, Config.SPEC);
    }

    //autogenerated
    private void commonSetup(final FMLCommonSetupEvent event) {
//        // Some common setup code
//        LOGGER.info("HELLO FROM COMMON SETUP");
//        if (Config.logDirtBlock)
//            LOGGER.info("DIRT BLOCK >> {}", ForgeRegistries.BLOCKS.getKey(Blocks.DIRT));
//        LOGGER.info(Config.magicNumberIntroduction + Config.magicNumber);
//        Config.items.forEach((item) -> LOGGER.info("ITEM >> {}", item.toString()));
    }

    // Add the example block item to the building blocks tab
    private void addCreative(BuildCreativeModeTabContentsEvent event) {
//        if (event.getTabKey() == CreativeModeTabs.INGREDIENTS)
//            event.accept(ModItems.MIDORI_ISHI);
    }

    @SubscribeEvent
    public void onServerStarting(ServerStartingEvent event) {
        String[] s = {"Gula", "Luxuria", "Avaritia", "Tristitia", "Ira", "Acedia", "Superbia"};
        int i = (int)(Math.random()*7);
        LOGGER.info(s[i]);
    }

    // You can use EventBusSubscriber to automatically register all static methods in the class annotated with @SubscribeEvent
    @Mod.EventBusSubscriber(modid = MOD_ID, bus = Mod.EventBusSubscriber.Bus.MOD, value = Dist.CLIENT)
    public static class ClientModEvents {
        @SubscribeEvent
        public static void onClientSetup(FMLClientSetupEvent event) {
            MenuScreens.register(ModMenuTypes.MIDORI_INFUSION_TABLE_MENU.get(), MidoriInfusionTableScreen::new);
            MenuScreens.register(ModMenuTypes.MIDORI_TRANSMOGRIFICATION_TABLE_MENU.get(), MidoriTransmogrificationTableScreen::new);
        }
    }
}
